<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proyecto on Airan Dev</title>
    <link>https://www.airanschez.tech/tags/proyecto/</link>
    <description>Recent content in Proyecto on Airan Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <managingEditor>airan@leanmind.es (Airan)</managingEditor>
    <webMaster>airan@leanmind.es (Airan)</webMaster>
    <lastBuildDate>Wed, 05 Aug 2020 13:45:00 +0000</lastBuildDate><atom:link href="https://www.airanschez.tech/tags/proyecto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Refactor proyecto Pokémon</title>
      <link>https://www.airanschez.tech/refactor-proyecto-pok%C3%A9mon/</link>
      <pubDate>Wed, 05 Aug 2020 13:45:00 +0000</pubDate>
      <author>airan@leanmind.es (Airan)</author>
      <guid>https://www.airanschez.tech/refactor-proyecto-pok%C3%A9mon/</guid>
      <description>Introducción Previamente en el blog he hablado acerca del proyecto personal en el que estoy trabajando. Por si no lo has leído te recomiendo pasarte por aquí y echarle un vistazo primero.
Desde ese momento hasta ahora han habido muchos cambios y nuevos aprendizajes tales como cambiar el uso de types a interfaces o meter una capa de dominio a mi proyecto para simplificar los componentes.
Types – Interfaces Tenía entendido que era buena alternativa usar un type para crearte tu propio tipo, sin embargo, hay mejores alternativas y un uso más concreto para esta característica de TypeScript.</description>
    </item>
    
  </channel>
</rss>
